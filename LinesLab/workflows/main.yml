name: Test_Lines

on:
  workflow_dispatch:
  
  push: 
    branches: [ main ]

jobs:

  test_repository_setup:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Test Lines directory
        run: cd Lines

      - name: Test src directory
        run: |
          cd Lines
          cd src
      - name: Test Line class exists
        run: |
          cd Lines
          cd src
          cat Line.java 
          java -version
  test_compilation:
    runs-on: ubuntu-latest
    
    needs: test_repository_setup

    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2
      
      - name: Download jar files
        run: |
          wget -O processing_core.jar "https://github.com/Nathaniel-github/JarHost/blob/main/processing_core.jar?raw=true"
          wget -O kTesting.jar "https://github.com/Nathaniel-github/APCSTesting/blob/main/kTesting.jar?raw=true"
          wget -O LineTest.java "https://raw.githubusercontent.com/Nathaniel-github/APCSTesting/main/LineTest.java"
      
      - uses: actions/upload-artifact@master
        with:
          name: testing-artifacts
          path: |
            ./Lines/src/processing_core.jar
            ./Lines/src/kTesting.jar
            ./Lines/src/LineTest.java
      
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
          
  test_constructor_setup:
    runs-on: ubuntu-latest
    needs: test_compilation
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test constructor
        run: java -cp .:processing_core.jar:kTesting.jar LineTest exists_constructor
  test_setPoint2_setup:
    runs-on: ubuntu-latest
    needs: test_compilation
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test setPoint2
        run: java -cp .:processing_core.jar:kTesting.jar LineTest exists_setPoint2

  test_draw_setup:
    runs-on: ubuntu-latest
    needs: test_compilation
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test draw
        run: java -cp .:processing_core.jar:kTesting.jar LineTest exists_draw

  test_getIntersectionX_setup:
    runs-on: ubuntu-latest
    needs: test_compilation
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test getIntersectionX
        run: java -cp .:processing_core.jar:kTesting.jar LineTest exists_getIntersectionX

  test_getIntersectionY_setup:
    runs-on: ubuntu-latest
    needs: test_compilation
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test getIntersectionY
        run: java -cp .:processing_core.jar:kTesting.jar LineTest exists_getIntersectionY

  test_intersects_setup:
    runs-on: ubuntu-latest
    needs: test_compilation
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test intersects
        run: java -cp .:processing_core.jar:kTesting.jar LineTest exists_intersects

  test_vertical_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src

      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test vertical lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest vertical
          
  test_parallel_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test parallel lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest parallel
    
  test_intersecting_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test intersecting lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest intersecting

  test_non_intersecting_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test non-intersecting lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest non_intersecting
        
  test_collinear_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test collinear lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest collinear

  test_horizontal_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test horizontal lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest horizontal

  test_horizontal_and_vertical_lines:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test horizontal and vertical lines
        run: java -cp .:processing_core.jar:kTesting.jar LineTest "horizontal and vertical"

  test_reversed_point_collisions:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test reversed point collisions
        run: java -cp .:processing_core.jar:kTesting.jar LineTest "reversed points"

  test_point_collision:

    runs-on: ubuntu-latest
    needs: [test_constructor_setup, test_setPoint2_setup, test_draw_setup, test_getIntersectionX_setup, test_getIntersectionY_setup, test_intersects_setup]
    defaults:
      run:
        working-directory: ./Lines/src

    steps:

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: testing-artifacts
          path: ./Lines/src
          
      - name: Compile the test code
        run: javac -cp .:processing_core.jar:kTesting.jar *.java
        
      - name: Test point collisions
        run: java -cp .:processing_core.jar:kTesting.jar LineTest point
